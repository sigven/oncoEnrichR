### Cancer associations

::: {.callout-note}
## Synopsis

* Each target in the query set is annotated with known associations to cancer phenotypes (_ontology terms_) established from multiple data types through the [Open Targets Platform](https://targetvalidation.org). Annotations are provided both through descriptive associations and [rank scores](https://sigven.github.io/oncoEnrichR/articles/cancer_gene_rank.html)

* Indication of putative cancer driver genes require support from **at least two** of the following sources:
    * [Network of Cancer Genes (NCG)](http://ncg.kcl.ac.uk/)
    * [IntOGen](https://www.intogen.org)
    * [Cancer Gene Census (CGC) - TIER1/2](https://cancer.sanger.ac.uk/census)
    * [TCGA's predicted cancer driver genes](https://pubmed.ncbi.nlm.nih.gov/29625053/)
    * [CancerMine](http://bionlp.bcgsc.ca/cancermine/) literature mining resource on cancer genes (considering only entries with > 5 citations)
* Evidence for genes harboring tumor suppressive or oncogenic functions are provided with three levels of confidence:
    * <span style="background-color:#5A5A5A; padding:2x; color:white"><b>&nbsp;Very strong&nbsp;</b></span>
        * Record present in __all three__ databases, i.e. NCG __and__ CGC, __and__ with _support (> 5 citations)_ in the biomedical literature (CancerMine)
    * <span style="background-color:#898989; padding:2x; color:white"><b>&nbsp;Strong&nbsp;</b></span> 
        * Record present in __at most two__ databases (CancerMine, CGC, or NCG)
    * <span style="background-color:#BBBBBB; padding:2x; color:white"><b>&nbsp;Moderate&nbsp;</b></span>
        * Record present in __at most one__ database (CancerMine, CGC, or NCG)
          
* Gene function summary is retrieved from [NCBI](https://www.ncbi.nlm.nih.gov/gene) and [UniProt Knowledgebase](https://www.uniprot.org/)

:::

<br>

::: {.panel-tabset}

#### Query set - cancer association rank

<br>

* Query set genes are ranked according to their overall strength of association to cancer, visualized in varying shades of blue (from <span style="background-color:#b8b8ba; padding:2x; color:white"><b>&nbsp; weak associations &nbsp; </b></span>&nbsp; to <span style="background-color:#08306b; padding:2x; color:white"><b>&nbsp; strong associations &nbsp; </b></span>). Specifically, ranking is based on the sum of [association scores](https://platform-docs.opentargets.org/associations#association-scores) pr. tumor type/tissue, and scaled as [percent rank within the query set](https://sigven.github.io/oncoEnrichR/articles/cancer_gene_rank.html) (column **targetset_cancer_rank**)

<br><br>

```{r table_browse_targets}
#| echo: false
#| output: asis
#| eval: !expr NROW(onc_enrich_report[['data']][['disease']][['target']]) > 0

target_assocs <- onc_enrich_report[['data']][['disease']][['target']] |>
  dplyr::mutate(targetset_cancer_rank = round(
    .data$targetset_cancer_rank, digits = 2)) |>
  dplyr::mutate(global_cancer_rank = round(
    .data$global_cancer_rank, digits = 2)) |>
  dplyr::select(-c("tumor_suppressor","oncogene")) |>
  dplyr::rename(tumor_suppressive = tsg_confidence_level,
                oncogenic = oncogene_confidence_level) |>
  dplyr::mutate(tumor_suppressive = dplyr::case_when(
    tumor_suppressive == "Very strong" ~ "Very strong",
    tumor_suppressive == "Strong" ~ "Strong",
    tumor_suppressive == "Moderate" ~ "Moderate",
    TRUE ~ as.character(tumor_suppressive)
  )) |>
   dplyr::mutate(oncogenic = dplyr::case_when(
    oncogenic == "Very strong" ~ "Very strong",
    oncogenic == "Strong" ~ "Strong",
    oncogenic == "Moderate" ~ "Moderate",
    TRUE ~ as.character(oncogenic)
  )) |>
  dplyr::mutate(tumor_suppressive = dplyr::if_else(
    tumor_suppressive == "NONE/LIMITED",
    "",
    as.character(tumor_suppressive)
  )) |>
  dplyr::mutate(oncogenic = dplyr::if_else(
    oncogenic == "NONE/LIMITED",
    "",
    as.character(oncogenic)
  ))
  
tsg_confidence_levels <- levels(as.factor(
  target_assocs$tumor_suppressive))

oncogene_confidence_levels <- levels(as.factor(
  target_assocs$oncogenic))

targets_shared <- crosstalk::SharedData$new(target_assocs)

crosstalk::bscols(
  list(
    crosstalk::filter_select("symbol", "Target", targets_shared, ~symbol),
    crosstalk::filter_select("tumor_suppressive", "Tumor suppressor evidence", 
                             targets_shared, ~tumor_suppressive),
    crosstalk::filter_select("oncogenic", "Oncogene evidence", 
                             targets_shared, ~oncogenic)
  ),
  list(
    crosstalk::filter_select("cancer_associations", "Associated cancer types", 
                             targets_shared, ~cancer_associations),
    crosstalk::filter_select("disease_associations", "Associated diseases (non-cancer)", 
                             targets_shared, ~disease_associations),
    crosstalk::filter_checkbox("cancer_driver", "Potential cancer driver", 
                               targets_shared, ~cancer_driver)
  )
)

htmltools::br()
dt <- DT::datatable(
  targets_shared, escape = F, 
  extensions=c("Buttons","Responsive"), 
  width = "100%",
  options=list(buttons = c('csv','excel'),
               #columnDefs = list(list(className = 'dt-center', targets = 3:5)),
               pageLength = 20,
               dom = 'Bfrtip')) |>
  DT::formatStyle('oncogenic', textAlign = 'center') |>
  DT::formatStyle('tumor_suppressive', textAlign = 'center') |>
  DT::formatStyle("symbol",
                  "targetset_cancer_rank", 
                  color = "white", 
                  backgroundColor = DT::styleInterval(
                    onc_enrich_report[['config']][['disease']][['breaks']],
                    onc_enrich_report[['config']][['disease']][['colors']])
  )

if(length(tsg_confidence_levels) > 0){
  dt <- dt |>
    DT::formatStyle(
      "tumor_suppressive","tumor_suppressive",
      color = "white", 
      backgroundColor = DT::styleEqual(
        c("Very strong", "Strong", "Moderate"),
       c("#5A5A5A", "#898989", "#BBBBBB"))
    )
}

if(length(oncogene_confidence_levels) > 0){
  dt <- dt |>
    DT::formatStyle(
      "oncogenic", "oncogenic",
      color = "white",
      backgroundColor = DT::styleEqual(
        c("Very strong", "Strong", "Moderate"),
        c("#5A5A5A", "#898989", "#BBBBBB"))
    )
}
dt

```


```{r opentargets_missing}
#| output: asis
#| echo: false
#| eval: !expr NROW(onc_enrich_report[['data']][['disease']][['target']]) == 0

cat('<i>No genes with disease associations from Open Targets Platform were found.</i>',sep='\n')
cat('\n')
```


<br><br>


#### Query set - association strength pr. tumor type


<br><br>

* Top cancer-associated genes (maximum 100) in the query set are shown with their specific tumor-type association strengths (percent rank)


```{r target_ttype_heatmap}
#| echo: false
#| eval: !expr NROW(onc_enrich_report[['data']][['disease']][['ttype_matrix']]) > 2 & NCOL(onc_enrich_report[['data']][['disease']][['ttype_matrix']]) > 2

oe_ttype_matrix <- 
  onc_enrich_report[['data']][['disease']][['ttype_matrix']]

if(NROW(oe_ttype_matrix) > 100){
  oe_ttype_matrix <- oe_ttype_matrix[1:100,]
}

if(NROW(oe_ttype_matrix) > 1){
  oe_ttype_matrix <- 
    oe_ttype_matrix[nrow(oe_ttype_matrix):1, ]
}

n_percent_ticks <- 10
if(NROW(oe_ttype_matrix) < 20){
  n_percent_ticks <- 5
}

#plotly_colors <- "Blues"

target_ttype_rank_fig <- plotly::plot_ly(
  colors = "Blues",
  width = 800,
  height = 400 + (14.67 * NROW(oe_ttype_matrix))) |>
  plotly::add_heatmap(
    y = rownames(oe_ttype_matrix),
    x = colnames(oe_ttype_matrix),
    z = oe_ttype_matrix,
    hovertext = "Tumor type percent rank",
    yaxis = "y") |>
  plotly::layout(
    title = 'Tumor type association rank',
    xaxis = list(tickfont = list(size = 13, family = "Helvetica"), 
                 tickangle = -50),
    yaxis = list(tickfont = list(size = 12, family = "Helvetica")),
    margin = list(l = 75, r = 20, b = 150, t = 30, pad = 4)
  ) |>
  plotly::colorbar(
    nticks = n_percent_ticks, 
    title = list(text = "Percent rank",side = "bottom"),
    limits = c(0, plyr::round_any(max(oe_ttype_matrix), 100, ceiling)))

rm(oe_ttype_matrix)
target_ttype_rank_fig


```

```{r missing_ttype_ranked_associations}
#| echo: false
#| output: asis
#| eval: !expr NROW(onc_enrich_report[['data']][['disease']][['ttype_matrix']]) <= 2 | NCOL(onc_enrich_report[['data']][['disease']][['ttype_matrix']]) <= 2

cat('<br>')
cat('\n <ul><li>  <i> <span style="font-size: 100%; padding: 3px; background-color:#989898; color:white">&nbsp;&nbsp;<b>NOT SHOWN</b> - limited/few tumor-type specific associations found for genes in the query set.&nbsp;&nbsp;</span></i></li></ul>',sep='\n')
cat('\n')
cat('<br><br>')

```
<br><br>


:::
